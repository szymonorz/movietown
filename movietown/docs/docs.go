// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/customer/login": {
            "post": {
                "description": "Login as a customer and return AccessToken (not yet implemented)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Login as a customer",
                "parameters": [
                    {
                        "description": "login customer DTO",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.APICustomerLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/customer/register": {
            "post": {
                "description": "register new customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Creates new customer",
                "parameters": [
                    {
                        "description": "create customer",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.APICustomerRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "type"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/ping/{customer_id}": {
            "get": {
                "description": "get []Reservation by customer_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservations"
                ],
                "summary": "Show reservations",
                "parameters": [
                    {
                        "type": "string",
                        "format": "int",
                        "description": "reservation search by customer_id",
                        "name": "customer_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.APICustomerLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.APICustomerRegister": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone_number",
                "surname",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Customer": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_student": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Employee": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.Role"
                },
                "roleId": {
                    "type": "integer"
                },
                "surname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Movie": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "director": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "integer"
                },
                "movieType": {
                    "$ref": "#/definitions/model.MovieType"
                },
                "movieTypeId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.MovieHall": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "number_of_seats": {
                    "type": "integer"
                }
            }
        },
        "model.MovieType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Reservation": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "customer": {
                    "$ref": "#/definitions/model.Customer"
                },
                "customerId": {
                    "type": "integer"
                },
                "employee": {
                    "$ref": "#/definitions/model.Employee"
                },
                "employeeId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "paid": {
                    "type": "boolean"
                },
                "reservationType": {
                    "$ref": "#/definitions/model.ReservationType"
                },
                "reservationTypeId": {
                    "type": "integer"
                },
                "reserved": {
                    "type": "boolean"
                },
                "screening": {
                    "$ref": "#/definitions/model.Screening"
                },
                "screeningId": {
                    "type": "integer"
                }
            }
        },
        "model.ReservationType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                }
            }
        },
        "model.Screening": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "movie": {
                    "$ref": "#/definitions/model.Movie"
                },
                "movieHall": {
                    "$ref": "#/definitions/model.MovieHall"
                },
                "movieHallId": {
                    "type": "integer"
                },
                "movieId": {
                    "type": "integer"
                },
                "reservations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Reservation"
                    }
                },
                "start_of_screening": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1-alpha",
	Host:             "localhost:4000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "MovieTown API",
	Description:      "This is a mistake.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
